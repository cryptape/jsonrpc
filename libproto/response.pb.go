// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package libproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FullTransaction struct {
	Transaction *SignedTransaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	BlockNumber uint64             `protobuf:"varint,2,opt,name=block_number,json=blockNumber" json:"block_number,omitempty"`
	BlockHash   []byte             `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Index       uint32             `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
}

func (m *FullTransaction) Reset()                    { *m = FullTransaction{} }
func (m *FullTransaction) String() string            { return proto.CompactTextString(m) }
func (*FullTransaction) ProtoMessage()               {}
func (*FullTransaction) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *FullTransaction) GetTransaction() *SignedTransaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *FullTransaction) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *FullTransaction) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *FullTransaction) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Response struct {
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Code      int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Response_ErrorMsg
	//	*Response_TxState
	//	*Response_BlockNumber
	//	*Response_Block
	//	*Response_Ts
	//	*Response_Peercount
	//	*Response_CallResult
	//	*Response_Logs
	//	*Response_Receipt
	//	*Response_TransactionCount
	//	*Response_ContractCode
	//	*Response_FilterId
	//	*Response_UninstallFilter
	//	*Response_FilterChanges
	//	*Response_FilterLogs
	//	*Response_None
	Data isResponse_Data `protobuf_oneof:"data"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type isResponse_Data interface {
	isResponse_Data()
}

type Response_ErrorMsg struct {
	ErrorMsg string `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,oneof"`
}
type Response_TxState struct {
	TxState string `protobuf:"bytes,4,opt,name=tx_state,json=txState,oneof"`
}
type Response_BlockNumber struct {
	BlockNumber uint64 `protobuf:"varint,5,opt,name=block_number,json=blockNumber,oneof"`
}
type Response_Block struct {
	Block string `protobuf:"bytes,6,opt,name=block,oneof"`
}
type Response_Ts struct {
	Ts *FullTransaction `protobuf:"bytes,7,opt,name=ts,oneof"`
}
type Response_Peercount struct {
	Peercount uint32 `protobuf:"varint,8,opt,name=peercount,oneof"`
}
type Response_CallResult struct {
	CallResult []byte `protobuf:"bytes,9,opt,name=call_result,json=callResult,proto3,oneof"`
}
type Response_Logs struct {
	Logs string `protobuf:"bytes,10,opt,name=logs,oneof"`
}
type Response_Receipt struct {
	Receipt string `protobuf:"bytes,11,opt,name=receipt,oneof"`
}
type Response_TransactionCount struct {
	TransactionCount uint64 `protobuf:"varint,12,opt,name=transaction_count,json=transactionCount,oneof"`
}
type Response_ContractCode struct {
	ContractCode []byte `protobuf:"bytes,13,opt,name=contract_code,json=contractCode,proto3,oneof"`
}
type Response_FilterId struct {
	FilterId uint64 `protobuf:"varint,14,opt,name=filter_id,json=filterId,oneof"`
}
type Response_UninstallFilter struct {
	UninstallFilter bool `protobuf:"varint,15,opt,name=uninstall_filter,json=uninstallFilter,oneof"`
}
type Response_FilterChanges struct {
	FilterChanges string `protobuf:"bytes,16,opt,name=filter_changes,json=filterChanges,oneof"`
}
type Response_FilterLogs struct {
	FilterLogs string `protobuf:"bytes,17,opt,name=filter_logs,json=filterLogs,oneof"`
}
type Response_None struct {
	None bool `protobuf:"varint,18,opt,name=none,oneof"`
}

func (*Response_ErrorMsg) isResponse_Data()         {}
func (*Response_TxState) isResponse_Data()          {}
func (*Response_BlockNumber) isResponse_Data()      {}
func (*Response_Block) isResponse_Data()            {}
func (*Response_Ts) isResponse_Data()               {}
func (*Response_Peercount) isResponse_Data()        {}
func (*Response_CallResult) isResponse_Data()       {}
func (*Response_Logs) isResponse_Data()             {}
func (*Response_Receipt) isResponse_Data()          {}
func (*Response_TransactionCount) isResponse_Data() {}
func (*Response_ContractCode) isResponse_Data()     {}
func (*Response_FilterId) isResponse_Data()         {}
func (*Response_UninstallFilter) isResponse_Data()  {}
func (*Response_FilterChanges) isResponse_Data()    {}
func (*Response_FilterLogs) isResponse_Data()       {}
func (*Response_None) isResponse_Data()             {}

func (m *Response) GetData() isResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Response) GetRequestId() []byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *Response) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetErrorMsg() string {
	if x, ok := m.GetData().(*Response_ErrorMsg); ok {
		return x.ErrorMsg
	}
	return ""
}

func (m *Response) GetTxState() string {
	if x, ok := m.GetData().(*Response_TxState); ok {
		return x.TxState
	}
	return ""
}

func (m *Response) GetBlockNumber() uint64 {
	if x, ok := m.GetData().(*Response_BlockNumber); ok {
		return x.BlockNumber
	}
	return 0
}

func (m *Response) GetBlock() string {
	if x, ok := m.GetData().(*Response_Block); ok {
		return x.Block
	}
	return ""
}

func (m *Response) GetTs() *FullTransaction {
	if x, ok := m.GetData().(*Response_Ts); ok {
		return x.Ts
	}
	return nil
}

func (m *Response) GetPeercount() uint32 {
	if x, ok := m.GetData().(*Response_Peercount); ok {
		return x.Peercount
	}
	return 0
}

func (m *Response) GetCallResult() []byte {
	if x, ok := m.GetData().(*Response_CallResult); ok {
		return x.CallResult
	}
	return nil
}

func (m *Response) GetLogs() string {
	if x, ok := m.GetData().(*Response_Logs); ok {
		return x.Logs
	}
	return ""
}

func (m *Response) GetReceipt() string {
	if x, ok := m.GetData().(*Response_Receipt); ok {
		return x.Receipt
	}
	return ""
}

func (m *Response) GetTransactionCount() uint64 {
	if x, ok := m.GetData().(*Response_TransactionCount); ok {
		return x.TransactionCount
	}
	return 0
}

func (m *Response) GetContractCode() []byte {
	if x, ok := m.GetData().(*Response_ContractCode); ok {
		return x.ContractCode
	}
	return nil
}

func (m *Response) GetFilterId() uint64 {
	if x, ok := m.GetData().(*Response_FilterId); ok {
		return x.FilterId
	}
	return 0
}

func (m *Response) GetUninstallFilter() bool {
	if x, ok := m.GetData().(*Response_UninstallFilter); ok {
		return x.UninstallFilter
	}
	return false
}

func (m *Response) GetFilterChanges() string {
	if x, ok := m.GetData().(*Response_FilterChanges); ok {
		return x.FilterChanges
	}
	return ""
}

func (m *Response) GetFilterLogs() string {
	if x, ok := m.GetData().(*Response_FilterLogs); ok {
		return x.FilterLogs
	}
	return ""
}

func (m *Response) GetNone() bool {
	if x, ok := m.GetData().(*Response_None); ok {
		return x.None
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_ErrorMsg)(nil),
		(*Response_TxState)(nil),
		(*Response_BlockNumber)(nil),
		(*Response_Block)(nil),
		(*Response_Ts)(nil),
		(*Response_Peercount)(nil),
		(*Response_CallResult)(nil),
		(*Response_Logs)(nil),
		(*Response_Receipt)(nil),
		(*Response_TransactionCount)(nil),
		(*Response_ContractCode)(nil),
		(*Response_FilterId)(nil),
		(*Response_UninstallFilter)(nil),
		(*Response_FilterChanges)(nil),
		(*Response_FilterLogs)(nil),
		(*Response_None)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// data
	switch x := m.Data.(type) {
	case *Response_ErrorMsg:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ErrorMsg)
	case *Response_TxState:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TxState)
	case *Response_BlockNumber:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.BlockNumber))
	case *Response_Block:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Block)
	case *Response_Ts:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ts); err != nil {
			return err
		}
	case *Response_Peercount:
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Peercount))
	case *Response_CallResult:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.CallResult)
	case *Response_Logs:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Logs)
	case *Response_Receipt:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Receipt)
	case *Response_TransactionCount:
		b.EncodeVarint(12<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.TransactionCount))
	case *Response_ContractCode:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.ContractCode)
	case *Response_FilterId:
		b.EncodeVarint(14<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.FilterId))
	case *Response_UninstallFilter:
		t := uint64(0)
		if x.UninstallFilter {
			t = 1
		}
		b.EncodeVarint(15<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Response_FilterChanges:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FilterChanges)
	case *Response_FilterLogs:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.FilterLogs)
	case *Response_None:
		t := uint64(0)
		if x.None {
			t = 1
		}
		b.EncodeVarint(18<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Response.Data has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 3: // data.error_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_ErrorMsg{x}
		return true, err
	case 4: // data.tx_state
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_TxState{x}
		return true, err
	case 5: // data.block_number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_BlockNumber{x}
		return true, err
	case 6: // data.block
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_Block{x}
		return true, err
	case 7: // data.ts
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FullTransaction)
		err := b.DecodeMessage(msg)
		m.Data = &Response_Ts{msg}
		return true, err
	case 8: // data.peercount
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_Peercount{uint32(x)}
		return true, err
	case 9: // data.call_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_CallResult{x}
		return true, err
	case 10: // data.logs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_Logs{x}
		return true, err
	case 11: // data.receipt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_Receipt{x}
		return true, err
	case 12: // data.transaction_count
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_TransactionCount{x}
		return true, err
	case 13: // data.contract_code
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Data = &Response_ContractCode{x}
		return true, err
	case 14: // data.filter_id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_FilterId{x}
		return true, err
	case 15: // data.uninstall_filter
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_UninstallFilter{x != 0}
		return true, err
	case 16: // data.filter_changes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_FilterChanges{x}
		return true, err
	case 17: // data.filter_logs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &Response_FilterLogs{x}
		return true, err
	case 18: // data.none
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Data = &Response_None{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// data
	switch x := m.Data.(type) {
	case *Response_ErrorMsg:
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ErrorMsg)))
		n += len(x.ErrorMsg)
	case *Response_TxState:
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.TxState)))
		n += len(x.TxState)
	case *Response_BlockNumber:
		n += proto.SizeVarint(5<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.BlockNumber))
	case *Response_Block:
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Block)))
		n += len(x.Block)
	case *Response_Ts:
		s := proto.Size(x.Ts)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Peercount:
		n += proto.SizeVarint(8<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Peercount))
	case *Response_CallResult:
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.CallResult)))
		n += len(x.CallResult)
	case *Response_Logs:
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Logs)))
		n += len(x.Logs)
	case *Response_Receipt:
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Receipt)))
		n += len(x.Receipt)
	case *Response_TransactionCount:
		n += proto.SizeVarint(12<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.TransactionCount))
	case *Response_ContractCode:
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.ContractCode)))
		n += len(x.ContractCode)
	case *Response_FilterId:
		n += proto.SizeVarint(14<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.FilterId))
	case *Response_UninstallFilter:
		n += proto.SizeVarint(15<<3 | proto.WireVarint)
		n += 1
	case *Response_FilterChanges:
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.FilterChanges)))
		n += len(x.FilterChanges)
	case *Response_FilterLogs:
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.FilterLogs)))
		n += len(x.FilterLogs)
	case *Response_None:
		n += proto.SizeVarint(18<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*FullTransaction)(nil), "FullTransaction")
	proto.RegisterType((*Response)(nil), "Response")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x93, 0x2e, 0x6d, 0x93, 0xd3, 0xbf, 0xb3, 0x2a, 0x64, 0x0d, 0x0d, 0x75, 0x45, 0x88,
	0x4a, 0x88, 0x5e, 0x00, 0x4f, 0x40, 0xa5, 0x29, 0x93, 0x80, 0x0b, 0x8f, 0xfb, 0xc8, 0x75, 0x4c,
	0x1b, 0x91, 0xd9, 0xc5, 0x76, 0xa4, 0xbe, 0x0d, 0x0f, 0xc6, 0xcb, 0x20, 0x1f, 0x7b, 0xac, 0xec,
	0xae, 0xe7, 0x77, 0x4e, 0xcf, 0x77, 0xbe, 0xcf, 0x0a, 0x4c, 0x8d, 0xb4, 0x47, 0xad, 0xac, 0xdc,
	0x1c, 0x8d, 0x76, 0xfa, 0x6a, 0xbe, 0x6b, 0xb5, 0xf8, 0x29, 0x0e, 0xbc, 0x51, 0x81, 0xac, 0x7e,
	0xa7, 0x30, 0xbb, 0xed, 0xda, 0xf6, 0xbb, 0xe1, 0xca, 0x72, 0xe1, 0x1a, 0xad, 0xc8, 0x27, 0x18,
	0xb9, 0xa7, 0x92, 0xa6, 0xcb, 0x74, 0x3d, 0xfa, 0x40, 0x36, 0xf7, 0xcd, 0x5e, 0xc9, 0xfa, 0x6c,
	0x90, 0x9d, 0x8f, 0x91, 0x1b, 0x18, 0xe3, 0xf6, 0x4a, 0x75, 0x0f, 0x3b, 0x69, 0x68, 0x6f, 0x99,
	0xae, 0x33, 0x36, 0x42, 0xf6, 0x0d, 0x11, 0xb9, 0x06, 0x08, 0x23, 0x07, 0x6e, 0x0f, 0xf4, 0x62,
	0x99, 0xae, 0xc7, 0xac, 0x40, 0x52, 0x72, 0x7b, 0x20, 0x0b, 0xe8, 0x37, 0xaa, 0x96, 0x27, 0x9a,
	0x2d, 0xd3, 0xf5, 0x84, 0x85, 0x62, 0xf5, 0x27, 0x83, 0x9c, 0x45, 0x1b, 0x7e, 0x83, 0x91, 0xbf,
	0x3a, 0x69, 0x5d, 0xd5, 0xd4, 0x78, 0xd9, 0x98, 0x15, 0x91, 0xdc, 0xd5, 0x84, 0x40, 0x26, 0x74,
	0x2d, 0x51, 0xfb, 0x82, 0xe1, 0x6f, 0x72, 0x0d, 0x85, 0x34, 0x46, 0x9b, 0xea, 0xc1, 0xee, 0x51,
	0xb3, 0x28, 0x13, 0x96, 0x23, 0xfa, 0x6a, 0xf7, 0xe4, 0x25, 0xe4, 0xee, 0x54, 0x59, 0xc7, 0x9d,
	0x44, 0x5d, 0xdf, 0x1d, 0xba, 0xd3, 0xbd, 0x07, 0xe4, 0xf5, 0x33, 0x4f, 0x7d, 0xef, 0xa9, 0x4c,
	0xfe, 0x77, 0xf5, 0x02, 0xfa, 0x58, 0xd2, 0x41, 0xfc, 0x7b, 0x28, 0xc9, 0x0a, 0x7a, 0xce, 0xd2,
	0x21, 0xa6, 0x37, 0xdf, 0x3c, 0x0b, 0xb9, 0x4c, 0x58, 0xcf, 0x59, 0xf2, 0x0a, 0x8a, 0xa3, 0x94,
	0x46, 0xe8, 0x4e, 0x39, 0x9a, 0x7b, 0xdb, 0x65, 0xc2, 0x9e, 0x10, 0xb9, 0x81, 0x91, 0xe0, 0x6d,
	0x5b, 0x19, 0x69, 0xbb, 0xd6, 0xd1, 0xc2, 0x1b, 0x2e, 0x13, 0x06, 0x1e, 0x32, 0x64, 0x64, 0x01,
	0x59, 0xab, 0xf7, 0x96, 0x42, 0x54, 0xc7, 0x8a, 0x5c, 0xc1, 0xd0, 0x48, 0x21, 0x9b, 0xa3, 0xa3,
	0xa3, 0x47, 0x57, 0x11, 0x90, 0xf7, 0x70, 0x79, 0xf6, 0x70, 0x55, 0x10, 0x1f, 0x47, 0x6b, 0xf3,
	0xb3, 0xd6, 0x16, 0x6f, 0x78, 0x03, 0x13, 0xa1, 0x95, 0x33, 0x5c, 0xb8, 0x0a, 0xd3, 0x9d, 0xc4,
	0x2b, 0xc6, 0x8f, 0x78, 0x1b, 0x73, 0xfe, 0xd1, 0xb4, 0x4e, 0x1a, 0xff, 0x32, 0xd3, 0xb8, 0x2d,
	0x0f, 0xe8, 0xae, 0x26, 0xef, 0x60, 0xde, 0xa9, 0x46, 0x59, 0xe7, 0xed, 0x04, 0x4a, 0x67, 0xcb,
	0x74, 0x9d, 0x97, 0x09, 0x9b, 0xfd, 0xeb, 0xdc, 0x62, 0x83, 0xbc, 0x85, 0x69, 0xdc, 0x25, 0x0e,
	0x5c, 0xed, 0xa5, 0xa5, 0xf3, 0x68, 0x62, 0x12, 0xf8, 0x36, 0x60, 0x9f, 0x4f, 0x1c, 0xc4, 0x0c,
	0x2e, 0xe3, 0x14, 0x04, 0xf8, 0xc5, 0x27, 0xb1, 0x80, 0x4c, 0x69, 0x25, 0x29, 0x89, 0x62, 0x58,
	0x7d, 0x1e, 0x40, 0x56, 0x73, 0xc7, 0x77, 0x03, 0xfc, 0x0c, 0x3e, 0xfe, 0x0d, 0x00, 0x00, 0xff,
	0xff, 0x9f, 0x11, 0x99, 0x3e, 0x2a, 0x03, 0x00, 0x00,
}
